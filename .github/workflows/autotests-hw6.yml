name: Autotests-hw6

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ ]

env:
  CHART_PATH: todo
  CONVERTER_IMAGE_NAME: todo
  ACCOUNTS_IMAGE_NAME: todo
  IMAGE_TAG: todo


jobs:
  tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4



      - name: Start minikube
        uses: medyagh/setup-minikube@master
        with:
          cpus: max
          memory: max

      - name: Add helm repo
        run: |
          helm repo add cetic https://cetic.github.io/helm-charts
          helm repo add codecentric https://codecentric.github.io/helm-charts
          helm repo add bitnami https://charts.bitnami.com/bitnami
          helm repo add vector https://helm.vector.dev
          helm repo update

      - name: Deploy vector
        continue-on-error: true
        run: |
          helm upgrade --install vector vector/vector \
            --values tests/hw9/vector-values.yml \
            --set customConfig.sinks.loki.auth.password=${{ secrets.HSE_LOKI_TOKEN }} \
            --set-string customConfig.sinks.loki.labels.repository='${{ github.repository }}' \
            --set-string customConfig.sinks.loki.labels.run_id='${{ github.run_id }}' \
            --wait --timeout 180s   

      - name: Deploy postgres
        continue-on-error: true
        run: |
          helm install postgresql bitnami/postgresql -f tests/hw6/postgres-values.yml --wait --timeout 180s

      - name: Deploy keycloak
        continue-on-error: true
        run: |
          kubectl create secret generic realm-secret --from-file=tests/hw6/realm.json
          helm install keycloak codecentric/keycloakx -f tests/hw6/keycloak-values.yml --wait --timeout 180s


      - name: Deploy rates
        continue-on-error: true
        run: |
          helm upgrade --install rates $CHART_PATH \
            --set fullnameOverride=rates \
            --set image.repository=miraclewisp/hse-rates \
            --set image.tag=auth-amd64 \
            -f tests/hw6/rates-values.yml \
            --wait --timeout 180s

      - name: Deploy converter
        continue-on-error: true
        run: |
          helm upgrade --install converter $CHART_PATH \
            --set fullnameOverride=converter \
            --set image.repository=$CONVERTER_IMAGE_NAME \
            --set image.tag=$IMAGE_TAG \
            -f tests/hw6/converter-values.yml \
            --wait --timeout 180s

      - name: Deploy accounts
        continue-on-error: true
        run: |
          helm upgrade --install accounts $CHART_PATH \
            --set fullnameOverride=accounts \
            --set image.repository=$ACCOUNTS_IMAGE_NAME \
            --set image.tag=$IMAGE_TAG \
            -f tests/hw6/accounts-values.yml \
            --wait --timeout 180s

      - name: Run tests
        continue-on-error: true
        run: |
          helm install autotest cetic/job \
            --set image.repository=miraclewisp/hse-accounts-test \
            --set image.tag=amd64 \
            --set backoffLimit=0 \
            --set image.pullPolicy=Always \
            --set 'args={\"-ws\"\, \"-fail\"}' \
            -f tests/hw6/test-values.yml \
            --wait --wait-for-jobs --timeout 180s

      - name: Debug k8s entities
        run: |
          kubectl get deployments
          kubectl get pods
          kubectl get services


      - name: Debug logs
        run: |
          kubectl get pods -n default|grep -v NAME|awk '{print $1}'|while read pods;do kubectl logs $pods;echo;done      

      - name: Get test logs
        run: |
          kubectl logs jobs/autotest-job
          TEST_RESULT=$(kubectl logs jobs/autotest-job | sed -n '/--- TEST RESULTS BEGIN ---/, /--- TEST RESULTS END ---/p' || true)
          echo "TEST_RESULTS<<EOF" >> $GITHUB_ENV
          echo "$TEST_RESULT" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - uses: actions/github-script@v7
        with:
          script: |
            const results = process.env.TEST_RESULTS
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: results
            })
